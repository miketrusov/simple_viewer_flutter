name: Windows Build (Direct)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Download Flutter SDK
      shell: pwsh
      run: |
        $ProgressPreference = 'SilentlyContinue'
        Invoke-WebRequest -Uri "https://storage.googleapis.com/flutter_infra_release/releases/stable/windows/flutter_windows_3.29.1-stable.zip" -OutFile "flutter.zip"
        Expand-Archive -Path flutter.zip -DestinationPath .
    
    - name: Add Flutter to PATH
      shell: pwsh
      run: |
        echo "$env:GITHUB_WORKSPACE\flutter\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
    
    - name: Flutter doctor
      run: flutter doctor -v
    
    - name: Enable Windows Desktop
      run: flutter config --enable-windows-desktop
    
    - name: Get dependencies
      run: flutter pub get
    
    - name: Build Windows
      run: flutter build windows
    
    - name: Archive build
      uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: build/windows/x64/runner/Release/
        retention-days: 1

  release:
    needs: build
    runs-on: windows-latest
    if: github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: windows-build
        path: windows-build
    
    - name: Create Release Package
      run: |
        Compress-Archive -Path "windows-build/*" -DestinationPath "SimpleViewer-windows.zip"
    
    - name: Create Release
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      shell: pwsh
      run: |
        $date = Get-Date -Format "yyyy.MM.dd-HH.mm"
        $response = gh release create "build-$date" SimpleViewer-windows.zip --generate-notes --title "Build $date" --latest
        $releaseUrl = "${{ github.server_url }}/${{ github.repository }}/releases/latest"
        echo "RELEASE_URL=$releaseUrl" >> $env:GITHUB_ENV
    
    - name: Send Discord Notification
      if: success()
      shell: pwsh
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      run: |
        $MESSAGE = @{
          content = "ðŸš€ New Windows build available! Download here: $env:RELEASE_URL"
        } | ConvertTo-Json
        
        Invoke-RestMethod -Uri $env:DISCORD_WEBHOOK -Method Post -Body $MESSAGE -ContentType 'application/json'